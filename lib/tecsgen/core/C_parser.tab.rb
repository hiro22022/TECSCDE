#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'
class C_parser < Racc::Parser

module_eval(<<'...end C_parser.y.rb/module_eval...', 'C_parser.y.rb', 745)

  RESERVED = {
    # keyword
    'typedef' => :TYPEDEF,
    'struct' => :STRUCT,
    'union' => :UNION,
    'sizeof' => :SIZEOF,
    'throw' => :THROW,

    # specifier
    # types
    'void'    => :VOID,
    'char'    => :CHAR,
    'short'   => :SHORT,

    'volatile'=> :VOLATILE,
    'const'   => :CONST,
    'extern'   => :EXTERN,

    'long'    => :LONG,
    'float'   => :FLOAT,
    'double'  => :DOUBLE,
    'signed'  => :SIGNED,
    'unsigned'=> :UNSIGNED,

    'int'     => :INT,
    'enum'    => :ENUM,

    'if'      => :IF,
    'else'    => :ELSE,
    'while'   => :WHILE,
    'do'      => :DO,
    'for'     => :FOR,
    'case'    => :CASE,
    'default' => :DEFAULT,
    'goto'    => :GOTO,
    'continue' => :CONTINUE,
    'break'   => :BREAK,
    'return'  => :RETURN,
    '__inline__'  => :__INLINE__,
    'inline'  => :INLINE,
    '__inline'  => :__INLINE,
    'Inline'  => :CINLINE,        # inline starting with Capital letter
    'static'  => :STATIC,
    'register' => :REGISTER,
    'auto'    => :AUTO,
    '__extension__'    => :EXTENSION,
    '__asm__' => :_ASM

  }

  @@generator_nest = -1
  @@generator_stack = []
  @@current_locale = []

  def finalize

    # mikan Namespace.pop
    Celltype.pop
    Cell.pop
    CompositeCelltype.pop
    Region.pop

  end

  def set_plugin( plugin )
    @plugin = plugin
  end

  def self.get_plugin
    @@generator_stack[@@generator_nest].get_plugin
  end

  def get_plugin
    @plugin
  end

  def parse(files)

    # mikan Namespace.push
    Celltype.push
    Cell.push
    CompositeCelltype.push
    Region.push

    @@generator_nest += 1
    @@generator_stack[@@generator_nest] = self
    @b_no_type_name = false

   begin

    @q = []
    comment = false
#    b_asm   = false

    # euc のコメントを utf8 として扱うと、コメントの終わりを誤る問題の対策
    TECS_LANG::set_kcode_binary

    # 800U, 0xffLL など (整数リテラルに共通の修飾子)
    integer_qualifier = "([Uu][Ll][Ll]|[Uu][Ll]|[Uu]|[Ll][Ll]|[Ll])?"

    files.each {|file|
      lineno = 1
     begin
#2.0       IO.foreach(file) {|line|
       TECSIO.foreach(file) {|line|
        col = 1
        line.rstrip!

        until line.empty?

          if comment
            case line
            # コメント終了
            when /\A\*\//
              comment = false
            when /\A./
              ;
            end
          else
            case line
            # 空白、プリプロセスディレクティブ
            when /\A\s+/
              ;
            # 識別子
            when /\A[a-zA-Z_]\w*/
              word = $&
              @q << [RESERVED[word] || :IDENTIFIER, Token.new(word.intern, file, lineno, col)]
            # 16 進数定数
            when /\A0x[0-9A-Fa-f]+#{integer_qualifier}/
              @q << [:HEX_CONSTANT, Token.new($&, file, lineno, col)]
            # 8 進数定数
            when /\A0[0-7]+#{integer_qualifier}/
              @q << [:OCTAL_CONSTANT, Token.new($&, file, lineno, col)]
            # 浮動小数定数
            when /\A[0-9]+\.([0-9]*)?([Ee][+-]?[0-9]+)?/
              @q << [:FLOATING_CONSTANT, Token.new($&, file, lineno, col)]
            # 整数定数
            when /\A\d+#{integer_qualifier}/
            # when /\A\d+/
              @q << [:INTEGER_CONSTANT, Token.new($&.to_i, file, lineno, col)]
            # 文字
            when /\A'(?:[^'\\]|\\.)'/
              @q << [:CHARACTER_LITERAL, Token.new($&, file, lineno, col)]
            # 文字列
#              "#include  #include #include \"../systask/logtask.cfg\"       最後の " 忘れ)で無限ループ
#            when /\A"(?:[^"\\]+|\\.)*"/
            when /\A"(?:[^"\\]|\\.)*"/   # これはうまく行くようだ
              @q << [:STRING_LITERAL, Token.new($&, file, lineno, col)]
            # 行コメント
            when /\A\/\/.*$/
              # 読み飛ばすだけ
            # コメント開始
            when /\A\/\*/
              comment = true
            when /\A>>=/, /\A<<=/, /\A>>/,  /\A<</
              @q << [$&, Token.new($&, file, lineno, col)]
            when /\A\+=/, /\A\-=/, /\A\*=/, /\A\/=/, /\A%=/, /\A&=/, /\A\|=/, /\A\^=/
              @q << [$&, Token.new($&, file, lineno, col)]
            when /\A::/, /\A==/, /\A!=/, /\A>=/, /\A<=/, /\A\->/, /\A\+\+/, /\A\-\-/
              @q << [$&, Token.new($&, file, lineno, col)]
            when /\A./
              @q << [$&, Token.new($&, file, lineno, col)]
            else
              raise
            end
          end

          line = $'
          col += $&.length
        end

        lineno += 1
      }

     rescue => evar
       Generator.error( "B1002 while open or reading \'$1\'" , file )
       print_exception( evar )
     end
    }

    # 終了の印
    @q << nil

    @yydebug = true
    do_parse

   ensure
    @@generator_nest -= 1
    TECS_LANG::reset_kcode
   end

  end


  def next_token
    token = @q.shift

    if token then
      @@current_locale[@@generator_nest] = token[1].locale

      case token[1].val
      when ";", ":", ",", "(", ")", "{", "}"
        set_no_type_name false
      when ".", "->"
        set_no_type_name true
      end

      # TYPE_NAME トークンへ置き換え
      if @b_no_type_name == false
        if token[0] == :IDENTIFIER && Namespace.is_typename?( token[1].val ) then
          token[0] = :TYPE_NAME
          locale = @@current_locale[@@generator_nest]
#print( "#{locale[0]}: line #{locale[1]} : #{token[0]} '#{token[1].val}: type_name'\n" )
        end
      end

      if $debug then     # 070107 token 無効時ここを通さないようした (through 対応 -d の時に例外発生) 
        locale = @@current_locale[@@generator_nest]
        if token then
          print( "#{locale[0]}: line #{locale[1]} : #{token[0]} '#{token[1].val}'\n" )
        else
          print( "#{locale[0]}: line #{locale[1]} : EOF\n" )
        end
      end
    end

    token
  end

  def on_error(t, v, vstack)
    if v == "$" then
     Generator.error( "B1003 Unexpected EOF"  )
    else
     Generator.error( "B1004 syntax error near \'$1\'" , v.val )
    end

  end

  def self.current_locale
    @@current_locale[ @@generator_nest ]
  end

  @@n_error = 0
  @@n_warning = 0
  @@n_info = 0

  # このメソッドは構文解析、意味解析からのみ呼出し可（コード生成でエラー発生は不適切）
  def self.error( msg )
    @@n_error += 1
    locale = @@current_locale[ @@generator_nest ]

    if locale then
      Console.puts "error: #{locale[0]}: line #{locale[1]} #{msg}"
    else
      Console.puts "error: #{msg}"
    end
  end

  # このメソッドは構文解析、意味解析からのみ呼出し可（コード生成でウォーニング発生は不適切）
  def self.warning( msg )
    @@n_warning += 1
    locale = @@current_locale[ @@generator_nest ]
    Console.puts "warning: #{locale[0]}: line #{locale[1]} #{msg}"
  end

  # このメソッドは構文解析、意味解析からのみ呼出し可
  def self.info( msg )
    @@n_info += 1
    locale = @@current_locale[ @@generator_nest ]
    Console.puts "info: #{locale[0]}: line #{locale[1]} #{msg}"
  end

  def self.get_n_error
    @@n_error
  end

  def self.get_n_warning
    @@n_warning
  end

  def self.get_nest
    @@generator_nest
  end

  def set_no_type_name b_no_type_name
    locale = @@current_locale[ @@generator_nest ]
#print "b_no_type_name=#{b_no_type_name} #{locale[0]}: line #{locale[1]}\n"
    @b_no_type_name = b_no_type_name
  end

...end C_parser.y.rb/module_eval...
##### State transition tables begin ###

clist = [
'106,107,108,109,110,112,273,113,181,266,273,238,70,118,119,273,117,120',
'121,122,123,124,125,251,77,352,255,68,397,53,381,273,327,265,385,76',
'79,273,354,232,308,8,9,10,11,15,16,17,18,19,20,21,79,69,23,25,27,28',
'29,75,28,29,233,81,234,235,236,237,67,239,240,242,243,244,245,309,310',
'311,312,313,314,315,316,317,318,39,40,41,42,43,44,45,46,144,246,106',
'107,108,109,110,112,325,113,273,345,273,238,324,118,119,170,117,120',
'121,122,123,124,125,54,277,54,353,255,323,53,170,53,319,344,398,273',
'55,174,55,232,305,8,9,10,11,15,16,17,18,19,20,21,79,169,23,25,27,28',
'29,368,153,173,233,81,234,235,236,237,269,239,240,242,243,244,245,28',
'29,194,304,211,212,340,195,196,339,39,40,41,42,43,44,45,46,144,246,106',
'107,108,109,110,112,402,113,248,340,247,238,339,118,119,273,117,120',
'121,122,123,124,125,251,54,54,255,54,210,53,53,53,83,53,400,82,55,55',
'55,232,55,8,9,10,11,15,16,17,18,19,20,21,79,241,23,25,27,28,29,379,83',
'216,233,82,234,235,236,237,350,239,240,242,243,244,245,349,194,201,202',
'203,204,195,196,215,350,39,40,41,42,43,44,45,46,144,246,106,107,108',
'109,110,112,321,113,205,206,320,238,277,118,119,255,117,120,121,122',
'123,124,125,54,54,55,272,54,47,53,53,199,200,53,207,273,55,55,208,232',
'55,8,9,10,11,15,16,17,18,19,20,21,79,209,23,25,27,28,29,382,197,198',
'233,210,234,235,236,237,273,239,240,242,243,244,245,386,194,201,202',
'203,204,195,196,306,273,39,40,41,42,43,44,45,46,144,246,106,107,108',
'109,110,112,383,113,197,198,89,238,357,118,119,273,117,120,121,122,123',
'124,125,54,54,54,197,198,88,53,53,53,201,202,203,204,55,55,55,232,87',
'8,9,10,11,15,16,17,18,19,20,21,79,55,23,25,27,28,29,199,200,361,233',
'162,234,235,236,237,163,239,240,242,243,244,245,183,171,184,365,185',
'186,187,199,200,97,39,40,41,42,43,44,45,46,144,246,106,107,108,109,110',
'112,367,113,199,200,77,238,369,118,119,175,117,120,121,122,123,124,125',
'199,200,205,206,370,371,176,283,376,282,207,280,208,274,271,209,232',
'384,8,9,10,11,15,16,17,18,19,20,21,79,97,23,25,27,28,29,258,65,388,233',
'389,234,235,236,237,390,239,240,242,243,244,245,273,62,61,257,249,395',
'396,3,330,329,39,40,41,42,43,44,45,46,144,246,106,107,108,109,110,112',
'98,113,328,97,273,238,,118,119,,117,120,121,122,123,124,125,,,,,,,,',
',,,,,,,,232,,8,9,10,11,15,16,17,18,19,20,21,79,,23,25,27,28,29,,,,233',
',234,235,236,237,,239,240,242,243,244,245,,,,,,,,,,,39,40,41,42,43,44',
'45,46,144,246,106,107,108,109,110,112,,113,,,,238,,118,119,,117,120',
'121,122,123,124,125,,,,,,,,,,,,,,,,,232,,8,9,10,11,15,16,17,18,19,20',
'21,79,,23,25,27,28,29,,,,233,,234,235,236,237,,239,240,242,243,244,245',
',,,,,,,,,,39,40,41,42,43,44,45,46,144,246,106,107,108,109,110,112,,113',
',,,238,,118,119,,117,120,121,122,123,124,125,,,,,,,,,,,,,,,,,232,,8',
'9,10,11,15,16,17,18,19,20,21,79,,23,25,27,28,29,,,,233,,234,235,236',
'237,,239,240,242,243,244,245,,,,,,,,,,,39,40,41,42,43,44,45,46,144,246',
'106,107,108,109,110,112,,113,,,,143,,118,119,,117,120,121,122,123,124',
'125,106,107,108,109,110,112,,113,,,,143,,118,119,,117,120,121,122,123',
'124,125,106,107,108,109,110,112,,113,,,,143,,118,119,,117,120,121,122',
'123,124,125,106,107,108,109,110,112,,113,,,,143,,118,119,,117,120,121',
'122,123,124,125,,144,,,,,,,,106,107,108,109,110,112,,113,,,,143,,118',
'119,144,117,120,121,122,123,124,125,106,107,108,109,110,112,,113,,,',
'143,,118,119,144,117,120,121,122,123,124,125,106,107,108,109,110,112',
',113,,,,143,,118,119,144,117,120,121,122,123,124,125,,,,,,,141,355,',
',,,,142,106,107,108,109,110,112,,113,,,144,143,,118,119,,117,120,121',
'122,123,124,125,106,107,108,109,110,112,,113,,,144,143,,118,119,,117',
'120,121,122,123,124,125,106,107,108,109,110,112,,113,,341,144,143,,118',
'119,,117,120,121,122,123,124,125,106,107,108,109,110,112,,113,,,37,143',
',118,119,,117,120,121,122,123,124,125,,144,,,,,8,9,10,11,15,16,17,18',
'19,20,21,,164,23,25,27,28,29,144,,,36,,8,9,10,11,15,16,17,18,19,20,21',
',,23,25,27,28,29,144,32,38,39,40,41,42,43,44,45,46,,,,,,,,,,,,,144,',
',39,40,41,42,43,44,45,46,106,107,108,109,110,112,,113,,,,143,,118,119',
',117,120,121,122,123,124,125,106,107,108,109,110,112,,113,,,,143,,118',
'119,,117,120,121,122,123,124,125,106,107,108,109,110,112,,113,,,,143',
',118,119,,117,120,121,122,123,124,125,106,107,108,109,110,112,,113,',
',,143,,118,119,,117,120,121,122,123,124,125,,144,,,,,37,,,106,107,108',
'109,110,112,,113,,,,143,,118,119,144,117,120,121,122,123,124,125,,,',
',,,,,,,,,,,36,144,8,9,10,11,15,16,17,18,19,20,21,,,23,25,27,28,29,,',
'38,,144,8,9,10,11,15,16,17,18,19,20,21,,,23,25,27,28,29,,,,39,40,41',
'42,43,44,45,46,,,144,106,107,108,109,110,112,,113,,372,,143,,118,119',
',117,120,121,122,123,124,125,106,107,108,109,110,112,,113,,,,143,,118',
'119,,117,120,121,122,123,124,125,8,9,10,11,15,16,17,18,19,20,21,,,23',
'25,27,28,29,8,9,10,11,15,16,17,18,19,20,21,,,23,25,27,28,29,,106,107',
'108,109,110,112,,113,,,144,143,,118,119,,117,120,121,122,123,124,125',
'106,107,108,109,110,112,,113,,,144,143,,118,119,,117,120,121,122,123',
'124,125,106,107,108,109,110,112,,113,,,,143,,118,119,,117,120,121,122',
'123,124,125,106,107,108,109,110,112,,113,,,,143,,118,119,,117,120,121',
'122,123,124,125,,144,,,8,9,10,11,15,16,17,18,19,20,21,,332,23,25,27',
'28,29,,,144,,,,,,,,106,107,108,109,110,112,,113,,,,143,,118,119,144',
'117,120,121,122,123,124,125,106,107,108,109,110,112,,113,,,,143,,118',
'119,144,117,120,121,122,123,124,125,,,,,,,141,106,107,108,109,110,112',
'142,113,,147,,143,,118,119,,117,120,121,122,123,124,125,,,106,107,108',
'109,110,112,,113,,,,143,,118,119,144,117,120,121,122,123,124,125,106',
'107,108,109,110,112,,113,,,,143,,118,119,144,117,120,121,122,123,124',
'125,,,,,,,,106,107,108,109,110,112,,113,,,,143,,118,119,144,117,120',
'121,122,123,124,125,,,106,107,108,109,110,112,,113,,,,143,,118,119,144',
'117,120,121,122,123,124,125,106,107,108,109,110,112,,113,,,,143,,118',
'119,144,117,120,121,122,123,124,125,,,,,,,,106,107,108,109,110,112,',
'113,,,,143,,118,119,144,117,120,121,122,123,124,125,,,106,107,108,109',
'110,112,,113,,,,143,,118,119,144,117,120,121,122,123,124,125,106,107',
'108,109,110,112,,113,,,,143,,118,119,144,117,120,121,122,123,124,125',
',,,,,,,106,107,108,109,110,112,,113,,,,143,,118,119,144,117,120,121',
'122,123,124,125,,,106,107,108,109,110,112,,113,,,,143,,118,119,144,117',
'120,121,122,123,124,125,106,107,108,109,110,112,,113,,,,143,,118,119',
'144,117,120,121,122,123,124,125,,,,,,,,106,107,108,109,110,112,,113',
',,,143,,118,119,144,117,120,121,122,123,124,125,,,106,107,108,109,110',
'112,,113,,,,143,,118,119,144,117,120,121,122,123,124,125,106,107,108',
'109,110,112,,113,,,,143,,118,119,144,117,120,121,122,123,124,125,,,',
',,,,106,107,108,109,110,112,,113,,,,143,,118,119,144,117,120,121,122',
'123,124,125,,,,,,,,,,,,,,,,,,144,8,9,10,11,15,16,17,18,19,20,21,,,23',
'25,27,28,29,,,,,144,106,107,108,109,110,112,,113,,,,143,,118,119,,117',
'120,121,122,123,124,125,106,107,108,109,110,112,144,113,,,,143,,118',
'119,,117,120,121,122,123,124,125,106,107,108,109,110,112,,113,,,,143',
',118,119,,117,120,121,122,123,124,125,106,107,108,109,110,189,,113,',
',,143,,118,119,,117,120,121,122,123,124,125,,144,,,,,,,,106,107,108',
'109,110,191,,113,,,,143,,118,119,144,117,120,121,122,123,124,125,106',
'107,108,109,110,191,,113,,,,143,,118,119,144,117,120,121,122,123,124',
'125,106,107,108,109,110,112,,113,,,,143,,118,119,144,117,120,121,122',
'123,124,125,106,107,108,109,110,112,,113,,,,143,,118,119,,117,120,121',
'122,123,124,125,,144,,,,,141,,,,,,,142,106,107,108,109,110,112,,113',
',,144,143,,118,119,,117,120,121,122,123,124,125,106,107,108,109,110',
'112,,113,,,144,143,,118,119,,117,120,121,122,123,124,125,251,337,,255',
',,53,,,,144,,,55,,,,,,,,,277,337,,255,,,,,,,,,,55,8,9,10,11,15,16,17',
'18,19,20,21,144,,23,25,27,28,29,,,,,8,9,10,11,15,16,17,18,19,20,21,',
'144,23,25,27,28,29,374,,,,39,40,41,42,43,44,45,46,,,,,,,149,,,,,,,,39',
'40,41,42,43,44,45,46,,8,9,10,11,15,16,17,18,19,20,21,,,23,25,27,28,29',
'8,9,10,11,15,16,17,18,19,20,21,,,23,25,27,28,29,,,,333,,,,,39,40,41',
'42,43,44,45,46,,,,,,,,,,,39,40,41,42,43,44,45,46,8,9,10,11,15,16,17',
'18,19,20,21,,,23,25,27,28,29,8,9,10,11,15,16,17,18,19,20,21,,,23,25',
'27,28,29,,,,,,,,,39,40,41,42,43,44,45,46,,,,,,,,,,,39,40,41,42,43,44',
'45,46,8,9,10,11,15,16,17,18,19,20,21,,,23,25,27,28,29,8,9,10,11,15,16',
'17,18,19,20,21,,,23,25,27,28,29,,,,,,,,,39,40,41,42,43,44,45,46,,,,',
',,,,,,39,40,41,42,43,44,45,46,8,9,10,11,15,16,17,18,19,20,21,,259,23',
'25,27,28,29,8,9,10,11,15,16,17,18,19,20,21,,264,23,25,27,28,29,,,,,',
',,,39,40,41,42,43,44,45,46,,,,,,,,,,,39,40,41,42,43,44,45,46,8,9,10',
'11,15,16,17,18,19,20,21,,,23,25,27,28,29,8,9,10,11,15,16,17,18,19,20',
'21,,343,23,25,27,28,29,,,,,,,,,39,40,41,42,43,44,45,46,,,,,,,,,,,39',
'40,41,42,43,44,45,46,8,9,10,11,15,16,17,18,19,20,21,,,23,25,27,28,29',
'8,9,10,11,15,16,17,18,19,20,21,,,23,25,27,28,29,,,,,,,,,39,40,41,42',
'43,44,45,46,,,,,,,,,,,39,40,41,42,43,44,45,46,8,9,10,11,15,16,17,18',
'19,20,21,,,23,25,27,28,29,,,,,,,,,,,,,,,,,,,,,,,,,,,39,40,41,42,43,44',
'45,46' ]
        racc_action_table = arr = ::Array.new(2957, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'402,402,402,402,402,402,358,402,114,166,362,402,26,402,402,303,402,402',
'402,402,402,402,402,250,50,281,250,24,393,250,358,281,240,166,362,48',
'50,393,303,402,217,402,402,402,402,402,402,402,402,402,402,402,402,26',
'402,402,402,402,402,48,114,114,402,250,402,402,402,402,24,402,402,402',
'402,402,402,217,217,217,217,217,217,217,217,217,217,402,402,402,402',
'402,402,402,402,402,402,383,383,383,383,383,383,238,383,218,261,394',
'383,237,383,383,95,383,383,383,383,383,383,383,51,276,94,284,276,236',
'51,172,94,218,261,394,331,55,101,94,383,213,383,383,383,383,383,383',
'383,383,383,383,383,383,95,383,383,383,383,383,331,84,101,383,51,383',
'383,383,383,172,383,383,383,383,383,383,55,55,288,213,137,137,254,288',
'288,254,383,383,383,383,383,383,383,383,383,383,145,145,145,145,145',
'145,401,145,148,335,146,145,335,145,145,401,145,145,145,145,145,145',
'145,152,160,174,152,345,136,152,160,174,52,345,397,52,152,160,174,145',
'345,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145',
'145,145,351,80,144,145,80,145,145,145,145,351,145,145,145,145,145,145',
'278,128,131,131,131,131,128,128,142,278,145,145,145,145,145,145,145',
'145,145,145,382,382,382,382,382,382,234,382,132,132,233,382,180,382',
'382,180,382,382,382,382,382,382,382,4,74,180,177,54,3,4,74,130,130,54',
'299,177,4,74,300,382,54,382,382,382,382,382,382,382,382,382,382,382',
'382,301,382,382,382,382,382,359,129,129,382,302,382,382,382,382,359',
'382,382,382,382,382,382,363,289,296,296,296,296,289,289,215,363,382',
'382,382,382,382,382,382,382,382,382,327,327,327,327,327,327,360,327',
'290,290,66,327,306,327,327,360,327,327,327,327,327,327,327,219,266,76',
'291,291,64,219,266,76,297,297,297,297,219,266,76,327,63,327,327,327',
'327,327,327,327,327,327,327,327,327,85,327,327,327,327,327,292,292,322',
'327,90,327,327,327,327,91,327,327,327,327,327,327,115,97,115,326,115',
'115,115,293,293,98,327,327,327,327,327,327,327,327,327,327,235,235,235',
'235,235,235,328,235,294,294,104,235,333,235,235,105,235,235,235,235',
'235,235,235,295,295,298,298,336,338,111,185,342,184,133,182,134,178',
'175,135,235,361,235,235,235,235,235,235,235,235,235,235,235,235,170',
'235,235,235,235,235,157,22,369,235,373,235,235,235,235,375,235,235,235',
'235,235,235,378,14,12,156,150,386,391,1,244,243,235,235,235,235,235',
'235,235,235,235,235,325,325,325,325,325,325,70,325,242,69,279,325,,325',
'325,,325,325,325,325,325,325,325,,,,,,,,,,,,,,,,,325,,325,325,325,325',
'325,325,325,325,325,325,325,325,,325,325,325,325,325,,,,325,,325,325',
'325,325,,325,325,325,325,325,325,,,,,,,,,,,325,325,325,325,325,325,325',
'325,325,325,365,365,365,365,365,365,,365,,,,365,,365,365,,365,365,365',
'365,365,365,365,,,,,,,,,,,,,,,,,365,,365,365,365,365,365,365,365,365',
'365,365,365,365,,365,365,365,365,365,,,,365,,365,365,365,365,,365,365',
'365,365,365,365,,,,,,,,,,,365,365,365,365,365,365,365,365,365,365,396',
'396,396,396,396,396,,396,,,,396,,396,396,,396,396,396,396,396,396,396',
',,,,,,,,,,,,,,,,396,,396,396,396,396,396,396,396,396,396,396,396,396',
',396,396,396,396,396,,,,396,,396,396,396,396,,396,396,396,396,396,396',
',,,,,,,,,,396,396,396,396,396,396,396,396,396,396,324,324,324,324,324',
'324,,324,,,,324,,324,324,,324,324,324,324,324,324,324,323,323,323,323',
'323,323,,323,,,,323,,323,323,,323,323,323,323,323,323,323,321,321,321',
'321,321,321,,321,,,,321,,321,321,,321,321,321,321,321,321,321,320,320',
'320,320,320,320,,320,,,,320,,320,320,,320,320,320,320,320,320,320,,324',
',,,,,,,307,307,307,307,307,307,,307,,,,307,,307,307,323,307,307,307',
'307,307,307,307,305,305,305,305,305,305,,305,,,,305,,305,305,321,305',
'305,305,305,305,305,305,280,280,280,280,280,280,,280,,,,280,,280,280',
'320,280,280,280,280,280,280,280,,,,,,,305,305,,,,,,305,274,274,274,274',
'274,274,,274,,,307,274,,274,274,,274,274,274,274,274,274,274,273,273',
'273,273,273,273,,273,,,305,273,,273,273,,273,273,273,273,273,273,273',
'255,255,255,255,255,255,,255,,255,280,255,,255,255,,255,255,255,255',
'255,255,255,196,196,196,196,196,196,,196,,,2,196,,196,196,,196,196,196',
'196,196,196,196,,274,,,,,92,92,92,92,92,92,92,92,92,92,92,,92,92,92',
'92,92,92,273,,,2,,2,2,2,2,2,2,2,2,2,2,2,,,2,2,2,2,2,255,2,2,92,92,92',
'92,92,92,92,92,,,,,,,,,,,,,196,,,2,2,2,2,2,2,2,2,398,398,398,398,398',
'398,,398,,,,398,,398,398,,398,398,398,398,398,398,398,385,385,385,385',
'385,385,,385,,,,385,,385,385,,385,385,385,385,385,385,385,384,384,384',
'384,384,384,,384,,,,384,,384,384,,384,384,384,384,384,384,384,354,354',
'354,354,354,354,,354,,,,354,,354,354,,354,354,354,354,354,354,354,,398',
',,,,32,,,350,350,350,350,350,350,,350,,,,350,,350,350,385,350,350,350',
'350,350,350,350,,,,,,,,,,,,,,,32,384,32,32,32,32,32,32,32,32,32,32,32',
',,32,32,32,32,32,,,32,,354,38,38,38,38,38,38,38,38,38,38,38,,,38,38',
'38,38,38,,,,32,32,32,32,32,32,32,32,,,350,339,339,339,339,339,339,,339',
',339,,339,,339,339,,339,339,339,339,339,339,339,189,189,189,189,189',
'189,,189,,,,189,,189,189,,189,189,189,189,189,189,189,72,72,72,72,72',
'72,72,72,72,72,72,,,72,72,72,72,72,189,189,189,189,189,189,189,189,189',
'189,189,,,189,189,189,189,189,,183,183,183,183,183,183,,183,,,339,183',
',183,183,,183,183,183,183,183,183,183,181,181,181,181,181,181,,181,',
',189,181,,181,181,,181,181,181,181,181,181,181,171,171,171,171,171,171',
',171,,,,171,,171,171,,171,171,171,171,171,171,171,245,245,245,245,245',
'245,,245,,,,245,,245,245,,245,245,245,245,245,245,245,,183,,,73,73,73',
'73,73,73,73,73,73,73,73,,245,73,73,73,73,73,,,181,,,,,,,,77,77,77,77',
'77,77,,77,,,,77,,77,77,171,77,77,77,77,77,77,77,239,239,239,239,239',
'239,,239,,,,239,,239,239,245,239,239,239,239,239,239,239,,,,,,,77,82',
'82,82,82,82,82,77,82,,82,,82,,82,82,,82,82,82,82,82,82,82,,,212,212',
'212,212,212,212,,212,,,,212,,212,212,77,212,212,212,212,212,212,212',
'211,211,211,211,211,211,,211,,,,211,,211,211,239,211,211,211,211,211',
'211,211,,,,,,,,210,210,210,210,210,210,,210,,,,210,,210,210,82,210,210',
'210,210,210,210,210,,,209,209,209,209,209,209,,209,,,,209,,209,209,212',
'209,209,209,209,209,209,209,208,208,208,208,208,208,,208,,,,208,,208',
'208,211,208,208,208,208,208,208,208,,,,,,,,207,207,207,207,207,207,',
'207,,,,207,,207,207,210,207,207,207,207,207,207,207,,,206,206,206,206',
'206,206,,206,,,,206,,206,206,209,206,206,206,206,206,206,206,205,205',
'205,205,205,205,,205,,,,205,,205,205,208,205,205,205,205,205,205,205',
',,,,,,,204,204,204,204,204,204,,204,,,,204,,204,204,207,204,204,204',
'204,204,204,204,,,203,203,203,203,203,203,,203,,,,203,,203,203,206,203',
'203,203,203,203,203,203,202,202,202,202,202,202,,202,,,,202,,202,202',
'205,202,202,202,202,202,202,202,,,,,,,,201,201,201,201,201,201,,201',
',,,201,,201,201,204,201,201,201,201,201,201,201,,,200,200,200,200,200',
'200,,200,,,,200,,200,200,203,200,200,200,200,200,200,200,199,199,199',
'199,199,199,,199,,,,199,,199,199,202,199,199,199,199,199,199,199,,,',
',,,,112,112,112,112,112,112,,112,,,,112,,112,112,201,112,112,112,112',
'112,112,112,,,,,,,,,,,,,,,,,,200,112,112,112,112,112,112,112,112,112',
'112,112,,,112,112,112,112,112,,,,,199,198,198,198,198,198,198,,198,',
',,198,,198,198,,198,198,198,198,198,198,198,197,197,197,197,197,197',
'112,197,,,,197,,197,197,,197,197,197,197,197,197,197,116,116,116,116',
'116,116,,116,,,,116,,116,116,,116,116,116,116,116,116,116,117,117,117',
'117,117,117,,117,,,,117,,117,117,,117,117,117,117,117,117,117,,198,',
',,,,,,118,118,118,118,118,118,,118,,,,118,,118,118,197,118,118,118,118',
'118,118,118,119,119,119,119,119,119,,119,,,,119,,119,119,116,119,119',
'119,119,119,119,119,141,141,141,141,141,141,,141,,,,141,,141,141,117',
'141,141,141,141,141,141,141,195,195,195,195,195,195,,195,,,,195,,195',
'195,,195,195,195,195,195,195,195,,118,,,,,141,,,,,,,141,194,194,194',
'194,194,194,,194,,,119,194,,194,194,,194,194,194,194,194,194,194,191',
'191,191,191,191,191,,191,,,141,191,,191,191,,191,191,191,191,191,191',
'191,251,251,,251,,,251,,,,195,,,251,,,,,,,,,277,277,,277,,,,,,,,,,277',
'251,251,251,251,251,251,251,251,251,251,251,194,,251,251,251,251,251',
',,,,277,277,277,277,277,277,277,277,277,277,277,,191,277,277,277,277',
'277,340,,,,251,251,251,251,251,251,251,251,,,,,,,83,,,,,,,,277,277,277',
'277,277,277,277,277,,340,340,340,340,340,340,340,340,340,340,340,,,340',
'340,340,340,340,83,83,83,83,83,83,83,83,83,83,83,,,83,83,83,83,83,,',
',249,,,,,340,340,340,340,340,340,340,340,,,,,,,,,,,83,83,83,83,83,83',
'83,83,249,249,249,249,249,249,249,249,249,249,249,,,249,249,249,249',
'249,89,89,89,89,89,89,89,89,89,89,89,,,89,89,89,89,89,,,,,,,,,249,249',
'249,249,249,249,249,249,,,,,,,,,,,89,89,89,89,89,89,89,89,155,155,155',
'155,155,155,155,155,155,155,155,,,155,155,155,155,155,7,7,7,7,7,7,7',
'7,7,7,7,,,7,7,7,7,7,,,,,,,,,155,155,155,155,155,155,155,155,,,,,,,,',
',,7,7,7,7,7,7,7,7,158,158,158,158,158,158,158,158,158,158,158,,158,158',
'158,158,158,158,161,161,161,161,161,161,161,161,161,161,161,,161,161',
'161,161,161,161,,,,,,,,,158,158,158,158,158,158,158,158,,,,,,,,,,,161',
'161,161,161,161,161,161,161,67,67,67,67,67,67,67,67,67,67,67,,,67,67',
'67,67,67,256,256,256,256,256,256,256,256,256,256,256,,256,256,256,256',
'256,256,,,,,,,,,67,67,67,67,67,67,67,67,,,,,,,,,,,256,256,256,256,256',
'256,256,256,6,6,6,6,6,6,6,6,6,6,6,,,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5',
',,5,5,5,5,5,,,,,,,,,6,6,6,6,6,6,6,6,,,,,,,,,,,5,5,5,5,5,5,5,5,88,88',
'88,88,88,88,88,88,88,88,88,,,88,88,88,88,88,,,,,,,,,,,,,,,,,,,,,,,,',
',,88,88,88,88,88,88,88,88' ]
        racc_action_check = arr = ::Array.new(2957, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
   nil,   557,  1117,   313,   301,  2810,  2792,  2600,   nil,   nil,
   nil,   nil,   511,   nil,   510,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   522,   nil,    14,   nil,    -1,   nil,   nil,   nil,
   nil,   nil,  1309,   nil,   nil,   nil,   nil,   nil,  1332,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    18,   nil,
   -18,   111,   215,   nil,   305,   111,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   366,   354,   nil,   336,  2722,   nil,   566,
   522,   nil,  1410,  1543,   302,   nil,   398,  1612,   nil,   nil,
   243,   nil,  1665,  2460,   147,   413,   nil,   nil,  2862,  2530,
   402,   407,  1094,   nil,   113,    93,   nil,   414,   451,   nil,
   nil,   115,   nil,   nil,   443,   395,   nil,   nil,   nil,   nil,
   nil,   495,  2055,   nil,     1,   445,  2165,  2188,  2220,  2243,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   246,   324,
   289,   238,   260,   489,   475,   477,   181,   136,   nil,   nil,
   nil,  2266,   266,   nil,   238,   188,   189,   nil,   190,   nil,
   537,   nil,   206,   nil,   nil,  2582,   512,   493,  2652,   nil,
   207,  2670,   nil,   nil,   nil,   nil,    -8,   nil,   nil,   nil,
   515,  1534,   108,   nil,   208,   499,   nil,   303,   503,   nil,
   290,  1511,   502,  1488,   494,   492,   nil,   nil,   nil,  1428,
   nil,  2349,   nil,   nil,  2326,  2289,  1106,  2142,  2119,  2025,
  2002,  1977,  1947,  1924,  1899,  1869,  1846,  1821,  1791,  1768,
  1743,  1713,  1690,   118,   nil,   359,   nil,    -2,    86,   396,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   288,   284,   473,   116,   100,    61,  1635,
    -8,   nil,   565,   518,   517,  1557,   nil,   nil,   nil,  2512,
    16,  2367,   nil,   nil,   169,  1083,  2740,   nil,   nil,   nil,
   nil,    87,   nil,   nil,   nil,   nil,   397,   nil,   nil,   nil,
   nil,   nil,   nil,  1060,  1037,   nil,   112,  2389,   257,   563,
  1000,    14,   nil,   nil,   113,   nil,   nil,   nil,   152,   341,
   367,   385,   412,   435,   456,   471,   333,   383,   467,   300,
   288,   302,   311,    -2,   nil,   977,   384,   954,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   922,   899,   375,   876,   853,   568,   418,   378,   440,   nil,
   nil,   113,   nil,   475,   nil,   192,   494,   nil,   495,  1405,
  2442,   nil,   495,   nil,   nil,   210,   nil,   nil,   nil,   nil,
  1311,   241,   nil,   nil,  1279,   nil,   nil,   nil,   -11,   336,
   378,   508,    -7,   352,   nil,   663,   nil,   nil,   nil,   524,
   nil,   nil,   nil,   527,   nil,   535,   nil,   nil,   533,   nil,
   nil,   nil,   283,    93,  1256,  1233,   485,   nil,   nil,   nil,
   nil,   491,   nil,    20,    88,   nil,   758,   183,  1210,   nil,
   nil,   188,    -2,   nil ]

racc_action_default = [
  -177,  -246,    -1,  -246,  -246,   -71,   -72,   -73,   -81,   -82,
   -83,   -84,   -85,   -86,   -87,   -88,   -89,   -90,   -91,   -92,
   -93,   -94,   -97,  -100,  -246,  -117,  -246,  -130,  -135,  -136,
  -178,  -179,  -246,  -181,  -182,  -185,  -186,  -187,  -246,  -234,
  -235,  -236,  -237,  -238,  -239,  -240,  -241,   404,  -246,   -77,
   -79,  -246,  -138,  -140,  -246,  -146,   -74,   -85,   -87,   -75,
   -76,  -184,  -183,   -99,  -246,  -103,  -116,  -246,  -120,  -246,
  -129,  -180,  -107,  -109,  -246,   -70,  -246,  -246,  -191,  -192,
  -137,  -139,  -246,  -246,  -246,  -147,  -148,   -95,  -246,  -246,
   -85,   -86,  -246,  -118,  -246,  -246,  -131,  -133,  -246,  -108,
  -110,  -246,  -189,   -78,   -79,    -2,    -3,    -4,    -5,    -6,
    -7,    -8,  -246,   -10,   -12,   -23,  -246,  -246,  -246,  -246,
   -29,   -30,   -31,   -32,   -33,   -34,   -35,   -37,   -41,   -44,
   -47,   -52,   -55,   -57,   -59,   -61,   -63,   -65,   -69,   -80,
  -171,  -246,  -246,  -242,  -246,  -246,  -246,  -143,  -246,  -145,
  -150,  -152,  -156,  -141,  -149,  -246,   -85,   -86,  -246,  -101,
  -246,  -246,  -123,  -122,  -115,  -119,  -246,  -124,  -126,  -127,
  -246,  -246,  -246,  -188,  -246,  -246,   -11,  -246,  -246,   -67,
  -157,   -20,  -246,  -246,  -246,  -246,   -18,   -19,   -24,  -246,
   -25,  -246,   -27,   -28,  -246,  -246,  -246,  -246,  -246,  -246,
  -246,  -246,  -246,  -246,  -246,  -246,  -246,  -246,  -246,  -246,
  -246,  -246,  -246,  -246,  -175,  -246,  -243,   -35,  -246,  -246,
  -193,  -194,  -195,  -196,  -197,  -198,  -199,  -200,  -201,  -202,
  -203,  -204,  -205,  -246,  -246,  -246,  -246,  -246,  -242,  -246,
  -246,  -215,  -246,  -246,  -246,  -246,  -245,  -142,  -144,  -246,
  -159,  -246,  -154,  -155,  -160,  -246,  -246,  -106,  -105,   -98,
  -102,  -246,  -111,  -113,  -114,  -121,  -246,  -132,  -134,  -128,
  -190,  -244,    -9,  -246,  -246,  -158,  -159,  -246,  -246,   -21,
   -20,  -246,   -16,   -17,  -246,   -38,   -39,   -40,   -42,   -43,
   -45,   -46,   -48,   -49,   -50,   -51,   -53,   -54,   -56,   -58,
   -60,   -62,   -64,  -246,  -172,  -246,  -246,  -246,  -223,  -224,
  -225,  -226,  -227,  -228,  -229,  -230,  -231,  -232,  -233,  -221,
  -246,  -246,  -246,  -246,  -246,  -246,  -246,  -246,  -246,  -217,
  -218,  -246,  -220,  -246,  -153,  -161,  -246,  -167,  -246,  -246,
  -246,  -163,  -246,   -96,  -104,  -246,  -125,   -68,   -36,   -13,
  -246,  -246,   -15,   -26,  -246,  -173,  -176,  -174,  -246,  -246,
  -246,  -246,  -246,  -246,  -212,  -246,  -214,  -216,  -219,  -246,
  -162,  -168,  -165,  -246,  -169,  -246,  -164,  -112,   -22,   -14,
   -66,  -222,  -246,  -246,  -246,  -246,  -246,  -213,  -151,  -166,
  -170,  -206,  -208,  -246,  -246,  -211,  -246,  -246,  -246,  -207,
  -209,  -246,  -246,  -210 ]

racc_goto_table = [
    50,     4,   148,   139,    56,    59,    60,   138,   190,   192,
   193,   146,   138,   262,    80,   167,    86,   158,    91,   278,
   220,    12,   260,   165,    72,   177,   178,    14,   253,    74,
    31,     4,    95,    92,   307,    35,   217,   188,     2,   157,
    91,   298,   335,    91,   299,    73,   154,   292,   293,   294,
   295,    12,   290,   291,   300,   161,   275,    14,    72,    72,
    71,   172,    85,    99,   100,    35,    94,   214,   335,   301,
   102,   138,   104,   296,   297,   288,   289,   302,   103,    73,
    73,    63,   152,   155,   256,    64,    90,   160,    94,   261,
   168,    94,   165,    66,   279,   166,   281,   267,    72,   334,
   268,   138,   177,   284,   177,   213,   157,   156,    90,   157,
   322,    90,    91,   250,    30,   285,   286,   287,   351,    73,
   260,   182,   101,    78,   145,   303,   217,     1,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   276,   nil,   nil,   nil,   nil,   nil,   nil,   252,   nil,
   nil,   nil,   nil,   nil,   160,   nil,   263,   160,   331,   nil,
    94,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   326,   138,
   270,   nil,   nil,   nil,   156,    72,   nil,   156,   nil,   nil,
    90,   nil,   nil,   nil,   342,   138,   nil,   346,   nil,   nil,
   nil,   nil,   nil,   279,   nil,   348,    73,   nil,   377,   nil,
   364,   nil,   366,   347,   nil,   nil,   nil,   157,   nil,   nil,
   nil,   nil,   250,    80,   nil,   104,   217,   nil,   217,   nil,
   358,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   356,   nil,   359,   360,   138,   362,   363,   276,   nil,
   387,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   152,   nil,
   152,   nil,   nil,   nil,   nil,   160,   217,   391,   392,   375,
   nil,   nil,   168,   378,   nil,   nil,   nil,   nil,   373,   138,
   nil,   399,   nil,   217,   217,   156,   152,   403,   nil,   nil,
   nil,   nil,   nil,   nil,   380,   nil,   nil,   217,   nil,   nil,
   nil,   nil,   nil,   217,   nil,   nil,   nil,   393,   394,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   401,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   152,
   nil,   263 ]

racc_goto_check = [
    32,    27,    57,    33,    27,    27,    27,    24,    10,    10,
    10,    25,    24,    45,    56,    51,    55,    39,    35,     8,
    70,    34,    42,    49,    30,     6,    13,    36,    60,    44,
    64,    27,    53,    48,    80,    26,    10,    12,     2,    35,
    35,    18,    61,    35,    19,     9,    55,    16,    16,    16,
    16,    34,    15,    15,    20,    48,    60,    36,    30,    30,
    64,    53,     9,    44,    44,    26,    27,    33,    61,    21,
    32,    24,    32,    17,    17,    14,    14,    22,    31,     9,
     9,    38,    27,    40,    39,    41,    34,    27,    27,    43,
    32,    27,    49,    47,     6,    50,     6,    54,    30,    59,
    25,    24,     6,    13,     6,    62,    35,    34,    34,    35,
    70,    34,    35,    55,    63,    12,    12,    12,     8,     9,
    42,     9,    67,    68,    69,     6,    10,     1,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    55,   nil,   nil,   nil,   nil,   nil,   nil,    32,   nil,
   nil,   nil,   nil,   nil,    27,   nil,    32,    27,     6,   nil,
    27,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    25,    24,
    32,   nil,   nil,   nil,    34,    30,   nil,    34,   nil,   nil,
    34,   nil,   nil,   nil,    25,    24,   nil,    51,   nil,   nil,
   nil,   nil,   nil,     6,   nil,    12,     9,   nil,    45,   nil,
    70,   nil,    70,    24,   nil,   nil,   nil,    35,   nil,   nil,
   nil,   nil,    55,    56,   nil,    32,    10,   nil,    10,   nil,
     6,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    33,   nil,     6,     6,    24,     6,     6,    55,   nil,
    70,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    27,   nil,
    27,   nil,   nil,   nil,   nil,    27,    10,    70,    70,    57,
   nil,   nil,    32,     6,   nil,   nil,   nil,   nil,    25,    24,
   nil,    70,   nil,    10,    10,    34,    27,    70,   nil,   nil,
   nil,   nil,   nil,   nil,    24,   nil,   nil,    10,   nil,   nil,
   nil,   nil,   nil,    10,   nil,   nil,   nil,     6,     6,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     6,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    27,
   nil,    32 ]

racc_goto_pointer = [
   nil,   127,    38,   nil,   nil,   nil,   -87,   nil,  -162,     7,
  -109,   nil,   -79,   -86,  -122,  -147,  -154,  -132,  -166,  -164,
  -155,  -141,  -134,   nil,   -70,   -71,    33,    -1,   nil,   nil,
   -14,     2,    -4,   -74,    19,   -49,    25,   nil,    59,   -71,
    -4,    63,  -136,   -71,    -9,  -147,   nil,    69,   -34,   -69,
     1,   -79,   nil,   -37,   -73,   -39,   -37,   -81,   nil,  -150,
  -124,  -208,   -36,   112,    28,   nil,   nil,    48,    73,    45,
  -125,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
  -183 ]

racc_goto_default = [
   nil,   nil,   nil,   114,   105,   111,   218,   115,   nil,     7,
   126,   116,   127,   nil,   128,   129,   130,   131,   132,   133,
   134,   135,   136,   137,   179,   140,   221,   219,    48,     5,
     6,    49,    84,   nil,    57,    13,    58,    22,   nil,   nil,
   nil,   nil,   159,   nil,   180,   nil,    24,   nil,   nil,    93,
   nil,   nil,    26,   nil,    96,    51,    52,   338,   150,   151,
   336,   254,   nil,   nil,   nil,    33,    34,   nil,   228,   nil,
   nil,   222,   223,   224,   225,   226,   227,   229,   230,   231,
   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 98, :_reduce_none,
  1, 100, :_reduce_2,
  1, 100, :_reduce_3,
  1, 100, :_reduce_4,
  1, 100, :_reduce_5,
  1, 100, :_reduce_6,
  1, 100, :_reduce_7,
  1, 100, :_reduce_8,
  3, 100, :_reduce_9,
  1, 102, :_reduce_10,
  2, 102, :_reduce_11,
  1, 104, :_reduce_none,
  4, 104, :_reduce_none,
  5, 104, :_reduce_none,
  4, 104, :_reduce_15,
  3, 104, :_reduce_16,
  3, 104, :_reduce_17,
  2, 104, :_reduce_18,
  2, 104, :_reduce_19,
  0, 105, :_reduce_none,
  1, 105, :_reduce_none,
  3, 105, :_reduce_none,
  1, 107, :_reduce_none,
  2, 107, :_reduce_24,
  2, 107, :_reduce_25,
  4, 107, :_reduce_26,
  2, 107, :_reduce_27,
  2, 107, :_reduce_28,
  1, 108, :_reduce_29,
  1, 108, :_reduce_30,
  1, 108, :_reduce_31,
  1, 108, :_reduce_32,
  1, 108, :_reduce_33,
  1, 108, :_reduce_34,
  1, 109, :_reduce_none,
  4, 109, :_reduce_36,
  1, 111, :_reduce_none,
  3, 111, :_reduce_38,
  3, 111, :_reduce_39,
  3, 111, :_reduce_40,
  1, 112, :_reduce_none,
  3, 112, :_reduce_42,
  3, 112, :_reduce_43,
  1, 113, :_reduce_none,
  3, 113, :_reduce_45,
  3, 113, :_reduce_46,
  1, 114, :_reduce_none,
  3, 114, :_reduce_48,
  3, 114, :_reduce_49,
  3, 114, :_reduce_50,
  3, 114, :_reduce_51,
  1, 115, :_reduce_none,
  3, 115, :_reduce_53,
  3, 115, :_reduce_54,
  1, 116, :_reduce_none,
  3, 116, :_reduce_56,
  1, 117, :_reduce_none,
  3, 117, :_reduce_58,
  1, 118, :_reduce_none,
  3, 118, :_reduce_60,
  1, 119, :_reduce_none,
  3, 119, :_reduce_62,
  1, 120, :_reduce_none,
  3, 120, :_reduce_64,
  1, 121, :_reduce_none,
  5, 121, :_reduce_66,
  1, 103, :_reduce_67,
  3, 103, :_reduce_68,
  1, 122, :_reduce_69,
  3, 123, :_reduce_none,
  1, 124, :_reduce_71,
  1, 124, :_reduce_none,
  1, 124, :_reduce_73,
  2, 124, :_reduce_74,
  2, 124, :_reduce_75,
  2, 124, :_reduce_76,
  1, 125, :_reduce_77,
  3, 125, :_reduce_78,
  1, 128, :_reduce_none,
  3, 128, :_reduce_80,
  1, 127, :_reduce_81,
  1, 127, :_reduce_82,
  1, 127, :_reduce_83,
  1, 127, :_reduce_84,
  1, 127, :_reduce_85,
  1, 127, :_reduce_86,
  1, 127, :_reduce_87,
  1, 127, :_reduce_88,
  1, 127, :_reduce_89,
  1, 127, :_reduce_90,
  1, 127, :_reduce_91,
  1, 127, :_reduce_92,
  1, 127, :_reduce_93,
  1, 127, :_reduce_94,
  0, 137, :_reduce_95,
  6, 131, :_reduce_96,
  0, 138, :_reduce_97,
  5, 131, :_reduce_98,
  2, 131, :_reduce_99,
  1, 134, :_reduce_100,
  1, 136, :_reduce_none,
  2, 136, :_reduce_none,
  1, 135, :_reduce_103,
  3, 139, :_reduce_104,
  2, 139, :_reduce_none,
  2, 139, :_reduce_none,
  1, 141, :_reduce_none,
  2, 141, :_reduce_108,
  1, 141, :_reduce_109,
  2, 141, :_reduce_110,
  1, 140, :_reduce_111,
  3, 140, :_reduce_112,
  1, 142, :_reduce_none,
  5, 132, :_reduce_none,
  4, 132, :_reduce_none,
  2, 132, :_reduce_none,
  1, 143, :_reduce_117,
  1, 145, :_reduce_none,
  2, 145, :_reduce_none,
  1, 144, :_reduce_none,
  3, 146, :_reduce_none,
  2, 146, :_reduce_none,
  2, 146, :_reduce_none,
  1, 147, :_reduce_none,
  3, 147, :_reduce_none,
  1, 148, :_reduce_none,
  4, 133, :_reduce_none,
  5, 133, :_reduce_none,
  2, 133, :_reduce_none,
  1, 149, :_reduce_130,
  1, 150, :_reduce_none,
  3, 150, :_reduce_none,
  1, 151, :_reduce_none,
  3, 151, :_reduce_none,
  1, 106, :_reduce_135,
  1, 106, :_reduce_136,
  2, 129, :_reduce_137,
  1, 129, :_reduce_none,
  2, 129, :_reduce_139,
  1, 153, :_reduce_140,
  3, 153, :_reduce_141,
  4, 153, :_reduce_142,
  3, 153, :_reduce_143,
  4, 153, :_reduce_144,
  3, 153, :_reduce_145,
  1, 152, :_reduce_146,
  2, 152, :_reduce_147,
  2, 152, :_reduce_148,
  3, 152, :_reduce_149,
  1, 154, :_reduce_none,
  5, 154, :_reduce_none,
  1, 155, :_reduce_none,
  3, 155, :_reduce_none,
  2, 156, :_reduce_none,
  2, 156, :_reduce_none,
  1, 156, :_reduce_none,
  1, 110, :_reduce_none,
  2, 110, :_reduce_none,
  1, 157, :_reduce_none,
  1, 157, :_reduce_none,
  2, 157, :_reduce_none,
  3, 158, :_reduce_none,
  2, 158, :_reduce_none,
  3, 158, :_reduce_none,
  3, 158, :_reduce_none,
  4, 158, :_reduce_none,
  2, 158, :_reduce_167,
  3, 158, :_reduce_none,
  3, 158, :_reduce_169,
  4, 158, :_reduce_none,
  1, 130, :_reduce_171,
  3, 130, :_reduce_172,
  4, 130, :_reduce_173,
  4, 130, :_reduce_174,
  1, 159, :_reduce_175,
  3, 159, :_reduce_176,
  0, 99, :_reduce_none,
  2, 99, :_reduce_none,
  1, 160, :_reduce_none,
  2, 160, :_reduce_none,
  1, 161, :_reduce_none,
  1, 161, :_reduce_none,
  2, 161, :_reduce_none,
  2, 161, :_reduce_none,
  1, 161, :_reduce_none,
  1, 161, :_reduce_none,
  1, 161, :_reduce_none,
  4, 162, :_reduce_188,
  1, 164, :_reduce_189,
  3, 164, :_reduce_190,
  3, 163, :_reduce_none,
  0, 166, :_reduce_none,
  2, 166, :_reduce_none,
  1, 167, :_reduce_none,
  1, 167, :_reduce_none,
  1, 167, :_reduce_none,
  1, 167, :_reduce_none,
  1, 167, :_reduce_none,
  1, 167, :_reduce_none,
  1, 167, :_reduce_none,
  1, 167, :_reduce_none,
  1, 167, :_reduce_none,
  1, 167, :_reduce_none,
  1, 167, :_reduce_none,
  1, 167, :_reduce_none,
  5, 168, :_reduce_none,
  7, 168, :_reduce_none,
  5, 169, :_reduce_none,
  7, 170, :_reduce_none,
  9, 171, :_reduce_none,
  5, 172, :_reduce_none,
  3, 173, :_reduce_none,
  4, 173, :_reduce_none,
  3, 173, :_reduce_none,
  3, 165, :_reduce_none,
  3, 174, :_reduce_none,
  2, 174, :_reduce_none,
  2, 174, :_reduce_none,
  3, 174, :_reduce_none,
  2, 174, :_reduce_none,
  2, 175, :_reduce_none,
  4, 175, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 126, :_reduce_none,
  1, 126, :_reduce_none,
  1, 126, :_reduce_none,
  1, 126, :_reduce_none,
  1, 126, :_reduce_none,
  1, 126, :_reduce_none,
  1, 126, :_reduce_none,
  1, 126, :_reduce_none,
  1, 101, :_reduce_242,
  2, 101, :_reduce_243,
  3, 101, :_reduce_244,
  1, 176, :_reduce_245 ]

racc_reduce_n = 246

racc_shift_n = 404

racc_token_table = {
  false => 0,
  :error => 1,
  :INTEGER_CONSTANT => 2,
  :FLOATING_CONSTANT => 3,
  :OCTAL_CONSTANT => 4,
  :HEX_CONSTANT => 5,
  :CHARACTER_LITERAL => 6,
  "(" => 7,
  ")" => 8,
  :STRING_LITERAL => 9,
  "[" => 10,
  "]" => 11,
  "." => 12,
  :IDENTIFIER => 13,
  "->" => 14,
  "++" => 15,
  "--" => 16,
  "," => 17,
  :SIZEOF => 18,
  "&" => 19,
  "*" => 20,
  "+" => 21,
  "-" => 22,
  "~" => 23,
  "!" => 24,
  "/" => 25,
  "%" => 26,
  "<<" => 27,
  ">>" => 28,
  "<" => 29,
  ">" => 30,
  "<=" => 31,
  ">=" => 32,
  "==" => 33,
  "!=" => 34,
  "^" => 35,
  "|" => 36,
  "&&" => 37,
  "||" => 38,
  "?" => 39,
  ":" => 40,
  ";" => 41,
  "=" => 42,
  :VOID => 43,
  :FLOAT => 44,
  :DOUBLE => 45,
  :BOOL => 46,
  :TYPE_NAME => 47,
  :CHAR => 48,
  :SHORT => 49,
  :INT => 50,
  :LONG => 51,
  :SIGNED => 52,
  :UNSIGNED => 53,
  "{" => 54,
  "}" => 55,
  :STRUCT => 56,
  :UNION => 57,
  :ENUM => 58,
  :CONST => 59,
  :VOLATILE => 60,
  :C_EXP => 61,
  :EXTENSION => 62,
  :TYPEDEF => 63,
  :IF => 64,
  :ELSE => 65,
  :WHILE => 66,
  :DO => 67,
  :FOR => 68,
  :SWITCH => 69,
  :infunc_statment => 70,
  :CASE => 71,
  :DEFAULT => 72,
  :GOTO => 73,
  :CONTINUE => 74,
  :BREAK => 75,
  :RETURN => 76,
  "+=" => 77,
  "-=" => 78,
  "*=" => 79,
  "/=" => 80,
  "%=" => 81,
  "<<=" => 82,
  ">>=" => 83,
  "&=" => 84,
  "|=" => 85,
  "^=" => 86,
  :__INLINE__ => 87,
  :INLINE => 88,
  :__INLINE => 89,
  :CINLINE => 90,
  :EXTERN => 91,
  :STATIC => 92,
  :AUTO => 93,
  :REGISTER => 94,
  "::" => 95,
  :_ASM => 96 }

racc_nt_base = 97

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "INTEGER_CONSTANT",
  "FLOATING_CONSTANT",
  "OCTAL_CONSTANT",
  "HEX_CONSTANT",
  "CHARACTER_LITERAL",
  "\"(\"",
  "\")\"",
  "STRING_LITERAL",
  "\"[\"",
  "\"]\"",
  "\".\"",
  "IDENTIFIER",
  "\"->\"",
  "\"++\"",
  "\"--\"",
  "\",\"",
  "SIZEOF",
  "\"&\"",
  "\"*\"",
  "\"+\"",
  "\"-\"",
  "\"~\"",
  "\"!\"",
  "\"/\"",
  "\"%\"",
  "\"<<\"",
  "\">>\"",
  "\"<\"",
  "\">\"",
  "\"<=\"",
  "\">=\"",
  "\"==\"",
  "\"!=\"",
  "\"^\"",
  "\"|\"",
  "\"&&\"",
  "\"||\"",
  "\"?\"",
  "\":\"",
  "\";\"",
  "\"=\"",
  "VOID",
  "FLOAT",
  "DOUBLE",
  "BOOL",
  "TYPE_NAME",
  "CHAR",
  "SHORT",
  "INT",
  "LONG",
  "SIGNED",
  "UNSIGNED",
  "\"{\"",
  "\"}\"",
  "STRUCT",
  "UNION",
  "ENUM",
  "CONST",
  "VOLATILE",
  "C_EXP",
  "EXTENSION",
  "TYPEDEF",
  "IF",
  "ELSE",
  "WHILE",
  "DO",
  "FOR",
  "SWITCH",
  "infunc_statment",
  "CASE",
  "DEFAULT",
  "GOTO",
  "CONTINUE",
  "BREAK",
  "RETURN",
  "\"+=\"",
  "\"-=\"",
  "\"*=\"",
  "\"/=\"",
  "\"%=\"",
  "\"<<=\"",
  "\">>=\"",
  "\"&=\"",
  "\"|=\"",
  "\"^=\"",
  "__INLINE__",
  "INLINE",
  "__INLINE",
  "CINLINE",
  "EXTERN",
  "STATIC",
  "AUTO",
  "REGISTER",
  "\"::\"",
  "_ASM",
  "$start",
  "all",
  "C_parser",
  "primary_expression",
  "namespace_identifier",
  "string_literal_list",
  "expression",
  "postfix_expression",
  "argument_list",
  "type_qualifier",
  "unary_expression",
  "unary_operator",
  "cast_expression",
  "type_name",
  "multiplicative_expression",
  "additive_expression",
  "shift_expression",
  "relational_expression",
  "equality_expression",
  "and_expression",
  "exclusive_or_expression",
  "inclusive_or_expression",
  "logical_and_expression",
  "logical_or_expression",
  "conditional_expression",
  "constant_expression",
  "declaration",
  "declaration_specifiers",
  "init_declarator_list",
  "storage_class",
  "type_specifier",
  "init_declarator",
  "declarator",
  "initializer",
  "struct_specifier",
  "union_specifier",
  "enum_specifier",
  "struct_term",
  "struct_tag",
  "struct_declaration_list",
  "@1",
  "@2",
  "struct_declaration",
  "struct_declarator_list",
  "type_specifier_qualifier_list",
  "struct_declarator",
  "union_term",
  "union_tag",
  "union_declaration_list",
  "union_declaration",
  "union_declarator_list",
  "union_declarator",
  "enum_type",
  "enumerator_list",
  "enumerator",
  "pointer",
  "direct_declarator",
  "parameter_type_list",
  "parameter_list",
  "parameter_declaration",
  "abstract_declarator",
  "direct_abstract_declarator",
  "initializer_list",
  "extension_statement",
  "statement",
  "typedef",
  "func_def",
  "declarator_list",
  "compoundstatement",
  "infunc_statement_list",
  "infunc_statement",
  "ifstatement",
  "whilestatement",
  "dowhilestatement",
  "forstatement",
  "switchstatement",
  "labelstatement",
  "gotostatement",
  "expressionstatement",
  "asm_statement",
  "assignment_operator" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 52)
  def _reduce_2(val, _values, result)
     result = [ :IDENTIFIER, val[0] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 60)
  def _reduce_3(val, _values, result)
     result = [ :INTEGER_CONSTANT, val[0] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 62)
  def _reduce_4(val, _values, result)
     result = [ :FLOATING_CONSTANT, val[0] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 64)
  def _reduce_5(val, _values, result)
     result = [ :OCTAL_CONSTANT, val[0] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 66)
  def _reduce_6(val, _values, result)
     result = [ :HEX_CONSTANT, val[0] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 68)
  def _reduce_7(val, _values, result)
     result = [ :CHARACTER_LITERAL, val[0] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 70)
  def _reduce_8(val, _values, result)
     result = [ :STRING_LITERAL_LIST, val[0] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 72)
  def _reduce_9(val, _values, result)
     result = [ :PARENTHESES, val[1].get_elements ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 76)
  def _reduce_10(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 78)
  def _reduce_11(val, _values, result)
     result << val[1] 
    result
  end
.,.,

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 86)
  def _reduce_15(val, _values, result)
     result = [ :OP_SUBSC, val[0], val[2] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 88)
  def _reduce_16(val, _values, result)
     result = [ :OP_DOT, val[0], val[2] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 90)
  def _reduce_17(val, _values, result)
     result = [ :OP_REF, val[0], val[2] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 91)
  def _reduce_18(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 92)
  def _reduce_19(val, _values, result)
     result = val[0] 
    result
  end
.,.,

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 104)
  def _reduce_24(val, _values, result)
     result = [ val[0], val[1] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 106)
  def _reduce_25(val, _values, result)
     result = [ :OP_SIZEOF_EXPR, val[1] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 108)
  def _reduce_26(val, _values, result)
     result = [ :OP_SIZEOF_TYPE, val[1] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 109)
  def _reduce_27(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 110)
  def _reduce_28(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 113)
  def _reduce_29(val, _values, result)
     result = :OP_U_AMP 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 114)
  def _reduce_30(val, _values, result)
     result = :OP_U_ASTER 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 115)
  def _reduce_31(val, _values, result)
     result = :OP_U_PLUS 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 116)
  def _reduce_32(val, _values, result)
     result = :OP_U_MINUS 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 117)
  def _reduce_33(val, _values, result)
     result = :OP_U_TILDE 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 118)
  def _reduce_34(val, _values, result)
     result = :OP_U_EXCLAM 
    result
  end
.,.,

# reduce 35 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 123)
  def _reduce_36(val, _values, result)
      result = [ :CAST, val[1], val[3] ] 
    result
  end
.,.,

# reduce 37 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 128)
  def _reduce_38(val, _values, result)
     result = [ :OP_MULT, val[0], val[2] ]  
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 130)
  def _reduce_39(val, _values, result)
     result = [ :OP_DIV, val[0], val[2] ]  
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 132)
  def _reduce_40(val, _values, result)
     result = [ :OP_REMAIN, val[0], val[2] ]  
    result
  end
.,.,

# reduce 41 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 137)
  def _reduce_42(val, _values, result)
     result = [ :OP_ADD, val[0], val[2] ]  
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 139)
  def _reduce_43(val, _values, result)
     result = [ :OP_SUB, val[0], val[2] ]  
    result
  end
.,.,

# reduce 44 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 144)
  def _reduce_45(val, _values, result)
     result = [ :OP_LSFT, val[0], val[2] ]  
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 146)
  def _reduce_46(val, _values, result)
     result = [ :OP_RSFT, val[0], val[2] ]  
    result
  end
.,.,

# reduce 47 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 151)
  def _reduce_48(val, _values, result)
     result = [ :OP_LT, val[0], val[2] ]  
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 153)
  def _reduce_49(val, _values, result)
     result = [ :OP_GT, val[0], val[2] ]  
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 155)
  def _reduce_50(val, _values, result)
     result = [ :OP_LE, val[0], val[2] ]  
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 157)
  def _reduce_51(val, _values, result)
     result = [ :OP_GE, val[0], val[2] ]  
    result
  end
.,.,

# reduce 52 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 162)
  def _reduce_53(val, _values, result)
     result = [ :OP_EQ, val[0], val[2] ]  
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 164)
  def _reduce_54(val, _values, result)
     result = [ :OP_NE, val[0], val[2] ]  
    result
  end
.,.,

# reduce 55 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 169)
  def _reduce_56(val, _values, result)
     result = [ :OP_AND, val[0], val[2] ]  
    result
  end
.,.,

# reduce 57 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 174)
  def _reduce_58(val, _values, result)
     result = [ :OP_EOR, val[0], val[2] ]  
    result
  end
.,.,

# reduce 59 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 179)
  def _reduce_60(val, _values, result)
     result = [ :OP_OR, val[0], val[2] ]  
    result
  end
.,.,

# reduce 61 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 184)
  def _reduce_62(val, _values, result)
     result = [ :OP_LAND, val[0], val[2] ]  
    result
  end
.,.,

# reduce 63 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 189)
  def _reduce_64(val, _values, result)
     result = [ :OP_LOR, val[0], val[2] ]  
    result
  end
.,.,

# reduce 65 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 194)
  def _reduce_66(val, _values, result)
     result = [ :OP_CEX, val[0], val[2].get_elements, val[4] ]  
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 200)
  def _reduce_67(val, _values, result)
    			result = Expression.new( val[0] )
			# result.print
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 205)
  def _reduce_68(val, _values, result)
    			result = Expression.new( val[2] )    # ',' の後ろを採用
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 211)
  def _reduce_69(val, _values, result)
    			result = Expression.new( val[0] )
			# result.print
#			res = result.eval_const( nil )

			# if res then
			#   puts "val: #{res}"
			# else
			#   puts "val: nil"
			# end
		
    result
  end
.,.,

# reduce 70 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 240)
  def _reduce_71(val, _values, result)
    			result = CIntType.new( -3 )    # storage class は無視
		
    result
  end
.,.,

# reduce 72 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 245)
  def _reduce_73(val, _values, result)
    			result = CIntType.new( -3 )
			result.set_qualifier val[0]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 250)
  def _reduce_74(val, _values, result)
    			result = val[1]                # storage class は無視
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 254)
  def _reduce_75(val, _values, result)
    			result = val[1].merge val[0]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 258)
  def _reduce_76(val, _values, result)
    			val[1].set_qualifier val[0]
                        result = val[1]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 265)
  def _reduce_77(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 267)
  def _reduce_78(val, _values, result)
     result << val[2] 
    result
  end
.,.,

# reduce 79 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 272)
  def _reduce_80(val, _values, result)
     val[0].set_initializer( val[2] ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 275)
  def _reduce_81(val, _values, result)
     set_no_type_name true; result = CVoidType.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 276)
  def _reduce_82(val, _values, result)
     set_no_type_name true; result = CFloatType.new(-32) 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 277)
  def _reduce_83(val, _values, result)
     set_no_type_name true; result = CFloatType.new(-64) 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 278)
  def _reduce_84(val, _values, result)
     set_no_type_name true; result = CBoolType.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 279)
  def _reduce_85(val, _values, result)
     set_no_type_name true; result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 280)
  def _reduce_86(val, _values, result)
     set_no_type_name true; result = CVoidType.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 281)
  def _reduce_87(val, _values, result)
     set_no_type_name true; result = CVoidType.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 282)
  def _reduce_88(val, _values, result)
     set_no_type_name true; result = CDefinedType.new( val[0].val ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 284)
  def _reduce_89(val, _values, result)
     set_no_type_name true; result = CIntType.new(-11 ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 285)
  def _reduce_90(val, _values, result)
     set_no_type_name true; result = CIntType.new( -2 ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 286)
  def _reduce_91(val, _values, result)
     set_no_type_name true; result = CIntType.new( -3 ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 287)
  def _reduce_92(val, _values, result)
     set_no_type_name true; result = CIntType.new( -4 ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 290)
  def _reduce_93(val, _values, result)
    			set_no_type_name true
			result = CIntType.new( -3 )
			result.set_sign :SIGNED
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 296)
  def _reduce_94(val, _values, result)
    			set_no_type_name true
			result = CIntType.new( -3 )
			result.set_sign :UNSIGNED
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 305)
  def _reduce_95(val, _values, result)
     StructType.set_define( true )  
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 308)
  def _reduce_96(val, _values, result)
    			StructType.end_of_parse
			result = val[1]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 314)
  def _reduce_97(val, _values, result)
    			result = CStructType.new()
			StructType.set_define( true )
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 319)
  def _reduce_98(val, _values, result)
    			StructType.end_of_parse
			result = val[1]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 325)
  def _reduce_99(val, _values, result)
    			StructType.set_define( false )
			StructType.end_of_parse
			result = val[1]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 331)
  def _reduce_100(val, _values, result)
     set_no_type_name true 
    result
  end
.,.,

# reduce 101 omitted

# reduce 102 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 340)
  def _reduce_103(val, _values, result)
    			result = CStructType.new( val[0].val )
			set_no_type_name true
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 349)
  def _reduce_104(val, _values, result)
    			val[1].each { |i|	# i: Decl
				i.set_type( val[0] )
				i.set_kind( :MEMBER )
				i.check
				CStructType.new_member( i )
			}
			result = val[1]
		
    result
  end
.,.,

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 368)
  def _reduce_108(val, _values, result)
    			result = val[1].merge val[0]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 372)
  def _reduce_109(val, _values, result)
    			result = CIntType.new( -3 )
			result.set_qualifier val[0]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 377)
  def _reduce_110(val, _values, result)
    			val[1].set_qualifier val[0]
                        result = val[1]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 383)
  def _reduce_111(val, _values, result)
     result = [ val[0] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 385)
  def _reduce_112(val, _values, result)
     result << val[2] 
    result
  end
.,.,

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 402)
  def _reduce_117(val, _values, result)
     set_no_type_name true 
    result
  end
.,.,

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 433)
  def _reduce_130(val, _values, result)
     result = CEnumType.new( -1 ) 
    result
  end
.,.,

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 449)
  def _reduce_135(val, _values, result)
     result = :CONST 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 450)
  def _reduce_136(val, _values, result)
     result = :VOLATILE 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 455)
  def _reduce_137(val, _values, result)
    			val[1].set_type( val[0] )
			result = val[1]
		
    result
  end
.,.,

# reduce 138 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 461)
  def _reduce_139(val, _values, result)
    			result = Decl.new( val[1].val )
			result.set_type( val[0] )
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 467)
  def _reduce_140(val, _values, result)
     result = Decl.new( val[0].val ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 469)
  def _reduce_141(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 472)
  def _reduce_142(val, _values, result)
    			val[0].set_type( CArrayType.new( val[2] ) )
			result = val[0]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 477)
  def _reduce_143(val, _values, result)
    			val[0].set_type( CArrayType.new )
			result = val[0]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 482)
  def _reduce_144(val, _values, result)
    		# 	Generator.warning( "W6001 need 'void' for no parameter"  )
			val[0].set_type( CFuncType.new )
			result = val[0]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 490)
  def _reduce_145(val, _values, result)
    		# 	Generator.warning( "W6002 need 'void' for no parameter"  )
			val[0].set_type( CFuncType.new )
			result = val[0]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 497)
  def _reduce_146(val, _values, result)
     result = CPtrType.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 500)
  def _reduce_147(val, _values, result)
    			result = CPtrType.new
			result.set_qualifier( val[1] )
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 505)
  def _reduce_148(val, _values, result)
    			val[1].set_type(CPtrType.new)
			result = val[1]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 510)
  def _reduce_149(val, _values, result)
    			ptrtype = CPtrType.new
			ptrtype.set_qualifier( val[1] )
			val[2].set_type( ptrtype )
			result = val[2]
		
    result
  end
.,.,

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 574)
  def _reduce_167(val, _values, result)
    			Generator.warning( "W6003 need 'void' for no parameter"  )
		
    result
  end
.,.,

# reduce 168 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 579)
  def _reduce_169(val, _values, result)
    			Generator.warning( "W6004 need 'void' for no parameter"  )
		
    result
  end
.,.,

# reduce 170 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 586)
  def _reduce_171(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 588)
  def _reduce_172(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 590)
  def _reduce_173(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 592)
  def _reduce_174(val, _values, result)
     result = C_EXP.new( val[2] ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 597)
  def _reduce_175(val, _values, result)
    			result = [ val[0] ]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 601)
  def _reduce_176(val, _values, result)
    			val[0] << val[2]
			result = val[0]
		
    result
  end
.,.,

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

# reduce 187 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 629)
  def _reduce_188(val, _values, result)
    			val[2].each{ |i|
			   i.set_kind( :TYPEDEF )
			}
			Typedef.new_decl_list( val[1], val[2] )
                        # val[1].show_tree 0
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 638)
  def _reduce_189(val, _values, result)
     result = [ val[0] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 640)
  def _reduce_190(val, _values, result)
     result << val[2] 
    result
  end
.,.,

# reduce 191 omitted

# reduce 192 omitted

# reduce 193 omitted

# reduce 194 omitted

# reduce 195 omitted

# reduce 196 omitted

# reduce 197 omitted

# reduce 198 omitted

# reduce 199 omitted

# reduce 200 omitted

# reduce 201 omitted

# reduce 202 omitted

# reduce 203 omitted

# reduce 204 omitted

# reduce 205 omitted

# reduce 206 omitted

# reduce 207 omitted

# reduce 208 omitted

# reduce 209 omitted

# reduce 210 omitted

# reduce 211 omitted

# reduce 212 omitted

# reduce 213 omitted

# reduce 214 omitted

# reduce 215 omitted

# reduce 216 omitted

# reduce 217 omitted

# reduce 218 omitted

# reduce 219 omitted

# reduce 220 omitted

# reduce 221 omitted

# reduce 222 omitted

# reduce 223 omitted

# reduce 224 omitted

# reduce 225 omitted

# reduce 226 omitted

# reduce 227 omitted

# reduce 228 omitted

# reduce 229 omitted

# reduce 230 omitted

# reduce 231 omitted

# reduce 232 omitted

# reduce 233 omitted

# reduce 234 omitted

# reduce 235 omitted

# reduce 236 omitted

# reduce 237 omitted

# reduce 238 omitted

# reduce 239 omitted

# reduce 240 omitted

# reduce 241 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 722)
  def _reduce_242(val, _values, result)
     result = NamespacePath.new( val[0].val, false ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 723)
  def _reduce_243(val, _values, result)
     result = NamespacePath.new( val[1].val, true ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 725)
  def _reduce_244(val, _values, result)
     result = val[0].append!( val[2].val ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 729)
  def _reduce_245(val, _values, result)
            while true
          # ';' が表れるまで、トークンを読み飛ばす。
          # gcc の構文拡張に対応すべきだが、単純な実装として、';' まで読み飛ばす。
          # トークン単位で読み飛ばしているので、文字列やコメント内の ';' は対象にならない。
          token = next_token
          if token[1].val == ";"
            break
          end
		      # p "skip: #{token[1].val}" 
        end
      
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class C_parser


